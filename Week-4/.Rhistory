abline(h=0)
abline(h=0)
hist(srn, prob = TRUE, xlab='standard residuals', main='Standard Residuals')
x <- seq(-7, 6, length.out = 301)#
y <-dnorm(x, mean(srn), sd(srn))
lines(x, y)
qqnorm(srn)
qqline(srn)
srn=rstandard(Mn)
par(mfrow=c(3,2))
plot(Mn$fitted.values,srn,ylab='standardised residuals',xlab='fitted values of Mn')
abline(h=0)
plot(floor_area_sqft,srn,xlab='floor area',ylab='standard residuals')
abline(h=0)
plot(room,srn,xlab='no.ofrooms',ylab='standard residuals')
abline(h=0)
abline(h=0)
hist(srn, prob = TRUE, xlab='standard residuals', main='Standard Residuals')
x <- seq(-7, 6, length.out = 301)#
y <-dnorm(x, mean(srn), sd(srn))
lines(x, y)
qqnorm(srn)
qqline(srn)
sr2=rstandard(M2)
par(mfrow=c(3,2))
plot(M2$fitted.values,sr2,ylab='standardised residuals',xlab='fitted values of Mn')
abline(h=0)
plot(floor_area_sqft,sr2,xlab='floor area',ylab='standard residuals')
abline(h=0)
plot(room,sr2,xlab='no. of rooms',ylab='standard residuals')
abline(h=0)
plot(floor,sr2,xlab='log(floor area)',ylab='standard residuals')
abline(h=0)
hist(sr2, prob = TRUE, xlab='standard residuals', main='Standard Residuals')
x <- seq(-7, 6, length.out = 301)#
y <-dnorm(x, mean(sr2), sd(sr2))
lines(x, y)
qqnorm(sr2)
qqline(sr2)
q()
runExample('01_hello')
# Enter code here
hotels %>%
summarise(
min_adr = min(adr),
mean_adr = mean(adr),
median_adr = median(adr),
max_adr = max(adr))
# Enter code here
arrange(hotels,lead_time)
# Enter code here
arrange(hotels,desc(lead_time))
# Enter code here
hotels %>% select (lead_time) %>% arrange(desc(lead_time))
# Load package tidyverse
library('tidyverse')
library('dplyr')
# Enter code here
arrange(hotels,desc(lead_time))
# Enter code here
select(hotels,lead_time,agent,market_segment)
# Read data from the hotels.csv file and assign it to a variable named, "hotels"
hotels<-read.csv('hotels.csv')
# Enter code here
names(hotels)
# Enter code here
glimpse(hotels)
# Enter code here
select(hotels,lead_time)
# Enter code here
select(hotels,lead_time,agent,market_segment)
# Enter code here
arrange(hotels,lead_time)
# Enter code here
arrange(hotels,desc(lead_time))
# Enter code here
hotels %>% select (lead_time) %>% arrange(desc(lead_time))
# Enter code here
hotels %>% filter(children >= 1) %>% select(hotel, children)
# Enter code here
hotels %>% filter(children>=1,hotel="City Hotel") %>% select(hotel,children)
# Enter code here
hotels %>% filter(children>=1,hotel=="City Hotel") %>% select(hotel,children)
# Enter code here
hotels %>% slice(1,3,5)
# Enter code here
hotels %>% slice(1,3,5)
# Enter code here
hotels %>% distinct(hotel)
# Enter code here
hotels %>%
mutate(little_ones = children + babies) %>%
select(hotel,little_ones,children,babies)
# Enter code here
hotels %>%
mutate(little_ones = children + babies,
average_little_ones = mean(little_ones)) %>%
select(hotel,little_ones,children,babies,average_little_ones)
# Enter code here
hotel %>% count(market_segment)
# Enter code here
hotels %>% count(market_segment)
# Enter code here
hotel %>% count(market_segment,sort=TRUE)
# Enter code here
hotels %>% count(market_segment,sort=TRUE)
# Enter code here
hotel %>% count(hotel,market_segment)
# Enter code here
hotels %>%
mutate(little_ones = children + babies) %>%
filter(little_ones >= 1, hotel == "Resort Hotel") %>%
select(hotel, little_ones)
hotels %>%
hotels %>%
mutate(little_ones = children + babies) %>%
filter(little_ones >= 1, hotel == "City Hotel") %>%
select(hotel, little_ones)
# Enter code here
hotels %>%
mutate(little_ones = children + babies) %>%
filter(little_ones >= 1, hotel == "Resort Hotel") %>%
select(hotel, little_ones)
hotels %>%
mutate(little_ones = children + babies) %>%
filter(little_ones >= 1, hotel == "City Hotel") %>%
select(hotel, little_ones)
# Enter code here
hotels %>%
filter( adults == 1,
children >= 1 | babies >=1) %>%
select(adults, babies, children)
# Enter code here
hotels %>%
mutate(little_ones = children + babies) %>%
select(children, babies, little_ones) %>%
arrange(desc(little_ones))
# Enter code here
hotels %>%
filter(hotel=="City Hotel")
# Enter code here
hotels %>%
filter(hotel=="City Hotel")
# Enter code here
hotels %>%
select(hotel, lead_time) %>%
arrange(lead_time) %>%
slice(1:5)
# Enter code here
hotels %>%
group_by(hotels) %>%
summarise(count = n()
# Enter code here
hotels %>%
group_by(hotels) %>%
summarise(count = n())
# Enter code here
hotels %>%
group_by(hotel) %>%
summarise(count = n())
# Enter code here
hotels %>%
summarise(min_adr = min(adr),
mean_adr = mean(adr),
median_adr = median(adr),
max_adr = max(adr))
# Enter code here
hotels %>% count(hotel,market_segment)
# Enter code here
arrange(select(hotels,lead_time),desc(lead_time))
# Enter code here
hotels %>%
select(hotel, lead_time) %>%
slice(1:5) %>%
arrange(lead_time))
# Enter code here
hotels %>%
select(hotel, lead_time) %>%
slice(1:5) %>%
arrange(lead_time)
# Enter code here
hotels %>% summarise(mean_adr=mean(adr))
# Enter code here
hotels %>%
group_by(hotel) %>%
summarise(mean_adr = mean(adr))
# Enter code here
hotels %>%
count(market_segment) %>%
arrange(desc(n))
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
comm_data %>%
select(sender,sentiment) %>%
arrange(desc(mean(sentiment))
# Enter code here
comm_data %>%
select(sender,sentiment) %>%
arrange(desc(mean(sentiment)))
# Enter code here
comm_data %>%
select(sender,sentiment) %>%
arrange(desc(mean(sentiment)))
# Enter code here
library('dplyr')
comm_data %>%
select(sender,sentiment) %>%
arrange(desc(mean(sentiment)))
setwd("~/NM2207/Week-4")
# Enter code here
library('dplyr')
comm_data %>%
select(sender,sentiment) %>%
arrange(desc(mean(sentiment)))
# Enter code here
comm_data %>%
distinct(sender)
# Enter code here
library('tidyverse')
library('dplyr')
comm_data<-read.csv("CommQuest2023_Larger.csv")
# Enter code here
comm_data %>%
select(date,channel,message)
# Enter code here
comm_data %>%
distinct(sender)
# Enter code here
comm_data %>%
group_by(sender) %>%
count(message)
# Enter code here
library('dplyr')
comm_data %>%
select(sender,sentiment) %>%
arrange(desc(mean(sentiment)))
# Enter code here
library('dplyr')
comm_data %>%
arrange(desc(mean(sentiment))) %>%
select(sender,mean(sentiment))
# Enter code here
library('dplyr')
comm_data %>%
arrange(desc(mean(sentiment))) %>%
select(sender,mean(comm_data$sentiment))
# Enter code here
average_sentiment<-mean(comm_data$sentiment)
comm_data %>%
arrange(desc(mean(sentiment))) %>%
select(sender,average_sentiment)
# Enter code here
comm_data %>%
select(message,sentiment) %>%
filter(sentiment<0)
# Enter code here
comm_data %>%
mutate(if{
# Enter code here
comm_data %>%
mutate(if(
sentiment>0,Sentiment Label="Positive";if(
# Enter code here
comm_data %>%
mutate(
if(
sentiment>0){
Sentiment Label="Positive"};
# Enter code here
comm_data %>%
mutate(
if(
sentiment>0){
Sentiment Label="Positive"};
# Enter code here
comm_data %>%
mutate(
if(sentiment>0)
{Sentiment Label="Positive"};
# Enter code here
comm_data %>%
mutate(
if(sentiment>0)
{mutate(Sentiment Label="Positive")}
# Enter code here
comm_data %>%
mutate(
ifelse(sentiment>0,Sentiment Label="Positive"))
# Enter code here
comm_data %>%
mutate(sentiment, sentiment label=ifelse(sentiment>0,"Positive")
# Enter code here
comm_data %>%
mutate(sentiment, "sentiment label"=ifelse(sentiment>0,"Positive")
# Enter code here
comm_data %>%
mutate(comm_data, "sentiment label"=ifelse(sentiment>0,"Positive")
# Enter code here
comm_data %>%
mutate(sentiment label=ifelse(sentiment>0,"Positive",
# Enter code here
comm_data %>%
mutate(comm_data,sentiment label=ifelse(sentiment>0,"Positive",
# Enter code here
mutate(comm_data,sentiment label=ifelse(sentiment>0,"Positive",
# Enter code here
mutate(comm_data,sentiment_label=ifelse(sentiment>0,"Positive",
ifelse(sentiment==0,"Neutral","Negative")))
# Enter code here
comm_data %>%
mutate(sentiment_label=ifelse(sentiment>0,"Positive",
ifelse(sentiment==0,"Neutral","Negative")))
# Enter code here
comm_data %>%
mutate(sentiment_label=if(sentiment>0){"Positive"},
if(sentiment==0){"Neutral"}
else("Negative")))
# Enter code here
comm_data %>%
mutate(sentiment_label=if(sentiment>0){"Positive"},
if(sentiment==0){"Neutral"}
else{"Negative"})
# Enter code here
comm_data %>%
mutate(sentiment_label=ifelse(sentiment>0,"Positive",
ifelse(sentiment==0,"Neutral","Negative")))
glimpse(comm_data)
length(comm_data$message)
# Enter code here
comm_data %>%
mutate(product=sentiment*nchar(message)) %>%
arrange(desc(product))
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(message) %>%
arrange(date)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(count(message)) %>%
arrange(date)
count(message)
count(comm_data,message)
# Enter code here
comm_data %>%
group_by(date) %>%
count(message) %>%
arrange(date)
comm_data %>%
group_by(date)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(count=nchar(message) %>%
arrange(date)
# Enter code here
comm_data %>%
group_by(date) %>%
count=n() %>%
arrange(date)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(count=n()) %>%
arrange(date)
# Enter code here
comm_data %>%
group_by(message) %>%
summarise(count=n()) %>%
arrange(date)
# Enter code here
comm_data %>%
group_by(sender) %>%
summarise(count=n()) %>%
arrange(date)
comm_data %>%
arrange(desc(mean(sentiment)))
comm_data %>%
filter(distinct(sender))
distinct(comm_data,sender)
filter(comm_data,distinct(sender))
filter(comm_data,distinct(,comm_data,sender))
filter(comm_data,distinct(comm_data,sender))
filter(distinct(comm_data,sender))
# Enter code here
average_sentiment<-mean(comm_data$sentiment)
comm_data %>%
arrange(desc(mean(sentiment))) %>%
select(sender,average_sentiment)
# Enter code here
average_sentiment<-mean(comm_data$sentiment)
comm_data %>%
arrange(desc(mean(sentiment))) %>%
select(sender)
filter(distinct(comm_data,sender))
# Enter code here
average_sentiment<-mean(comm_data$sentiment)
comm_data %>%
arrange(desc(mean(sentiment))) %>%
select(sender) %>%
filter(distinct(comm_data,sender))
comm_data %>%
distinct(sender)
comm_data %>%
filter(distinct(sender))
filter(distinct(comm_data,sender))
# Enter code here
average_sentiment<-mean(comm_data$sentiment)
comm_data %>%
arrange(desc(mean(sentiment))) %>%
select(sender) %>%
filter(distinct(comm_data,sender))
# Enter code here
filter(distinct(comm_data,sender))
# Enter code here
select(comm_data,sender)
filter(distinct(comm_data,sender))
# Enter code here
select(comm_data,sender(
filter(distinct(comm_data,sender)))
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_characters=sum(nchar(message)))
arrange(total_characters)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_characters=sum(nchar(message)))%>%
arrange(total_characters)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_characters=sum(nchar(message)))%>%
arrange(desc(total_characters))
# Enter code here
comm_data %>%
select(message,sentiment) %>%
filter(sentiment<0)
# Enter code here
comm_data %>%
select(message,sentiment) %>%
filter(sentiment<0)
# Enter code here
comm_data %>%
select(message,sentiment) %>%
filter(sentiment<0)
# Enter code here
comm_data %>%
select(message,sentiment) %>%
filter(sentiment<0)
# Enter code here
comm_data %>%
mutate(product=sentiment*nchar(message)) %>%
arrange(desc(product))
# Enter code here
comm_data %>%
group_by(sender) %>%
summarise(average_sentiment=mean(sentiment))
# Enter code here
comm_data %>%
group_by(sender) %>%
summarise(average_sentiment=mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
filter(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
summarise(average_sentiment=mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
summarise(average_sentiment=mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
filter(average_sentiment[1:3])
comm_data %>%
group_by(sender) %>%
summarise(average_sentiment=mean(sentiment)) %>%
arrange(desc(average_sentiment))
filter(average_sentiment[1:3])
average_sentiment[1:3]
# Enter code here
comm_data %>%
group_by(sender) %>%
summarise(average_sentiment=mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
summarise(average_sentiment=mean(sentiment)) %>%
ungroup(sender)
# Enter code here
comm_data %>%
group_by(sender) %>%
summarise(average_sentiment=mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(average_sentiment=mean(sentiment)) %>%
arrange(date)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_characters=sum(nchar(message)))%>%
arrange(desc(total_characters)) %>%
slice(1)
