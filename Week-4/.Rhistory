total<-total+x
}
add_to_total(5)
add_to_total(10)
add_to_total(15)
# Enter code here
total<-10
add_to_total<-function(x){
total<-total+x
return(total)}
add_to_total(5)
add_to_total(10)
add_to_total(15)
add_to_x <- function(value) {
x <<- x + value
return(x)
}
# Initialize x to 1
x <- 1
# Use the function to accumulate values
x <- add_to_x(5)  # x = 6
x <- add_to_x(10) # x = 16
x <- add_to_x(7)  # x = 23
# Now x contains the accumulated value
print(x)  # 23
# Enter code here
add_to_total<-function(x){
total<-total+x
return(total)}
total<-10
add_to_total(5)
add_to_total(10)
add_to_total(15)
# Enter code here
total<-10
add_to_total<-function(x){
total<-total+x
return(total)}
total<-add_to_total(5)
total<-add_to_total(10)
total<-add_to_total(15)
# Enter code here
total<-10
add_to_total<-function(x){
total<-total+x
return(total)}
total<-add_to_total(5)
total<-add_to_total(10)
total<-add_to_total(15)
total
# Enter code here
outer_function<-function(x){
x<-5
inner_function<-function(){
print(x)}
inner_function()}
inner_function()
# Enter code here
text_analysis_game <- function(sentence) {
number_of_words <- lengths(strsplit(sentence, ' '))
number_of_characters <- nchar(sentence)
average_word_length <- mean(number_of_characters /number_of_words)
communication_skill_level<-ifelse(number_of_words & number_of_characters & average_word_length >= 10,"Good!","Poor!")
print(paste0("Communication skill level: ", communication_skill_level, " Your sentence has ", number_of_words, " words, ", number_of_characters, " characters and your sentence's average word length is ", average_word_length))
}
text_analysis_game("This is a sentence")
text_analysis_game("Thisisasentence dszghrhrherh rhreherh")
# Enter code here
outer_function<-function(x){
x<-5
inner_function<-function(){
print(x)}
inner_function()}
outer_function(x)
inner_function()
<<-
# Enter code here
total<-100
total<<-function(x){
total<-total+x
return(total)}
total(5)
# Enter code here
total<-100
new_total<<-function(x){
total<<-total+x
return(total)}
new_total(5)
# Enter code here
total<-100
new_total<<-function(x){
total<<-total+x
return(total)}
new_total(5)
new_total(10)
# Enter code here
total<-100
new_total<<-function(x){
total<<-total+x
return(total)}
new_total(5)
new_total(10)
new_total(30)
?readline
# Enter code here
text_analysis_game <- function() {
sentenceread<-readline(sentence)
number_of_words <- lengths(strsplit(sentence, ' '))
number_of_characters <- nchar(sentence)
average_word_length <- mean(number_of_characters /number_of_words)
communication_skill_level<-ifelse(number_of_words & number_of_characters & average_word_length >= 10,"Good!","Poor!")
print(paste0("Communication skill level: ", communication_skill_level, " Your sentence has ", number_of_words, " words, ", number_of_characters, " characters and your sentence's average word length is ", average_word_length))
}
text_analysis_game("This is a sentence")
# Enter code here
text_analysis_game <- function() {
sentenceread<-readline(sentence)
number_of_words <- lengths(strsplit(sentence, ' '))
number_of_characters <- nchar(sentence)
average_word_length <- mean(number_of_characters /number_of_words)
communication_skill_level<-ifelse(number_of_words & number_of_characters & average_word_length >= 10,"Good!","Poor!")
print(paste0("Communication skill level: ", communication_skill_level, " Your sentence has ", number_of_words, " words, ", number_of_characters, " characters and your sentence's average word length is ", average_word_length))
}
text_analysis_game()
# Enter code here
text_analysis_game <- function() {
sentence<-readline("Enter a sentence: ")
number_of_words <- lengths(strsplit(sentence, ' '))
number_of_characters <- nchar(sentence)
average_word_length <- mean(number_of_characters /number_of_words)
communication_skill_level<-ifelse(number_of_words & number_of_characters & average_word_length >= 10,"Good!","Poor!")
print(paste0("Communication skill level: ", communication_skill_level, " Your sentence has ", number_of_words, " words, ", number_of_characters, " characters and your sentence's average word length is ", average_word_length))
}
text_analysis_game()
# Enter code here
text_analysis_game <- function() {
sentence<-readline("Enter a sentence: ")
number_of_words <- lengths(strsplit(sentence, ' '))
number_of_characters <- nchar(sentence)
average_word_length <- mean(number_of_characters /number_of_words)
communication_skill_level<-ifelse(number_of_words & number_of_characters & average_word_length >= 10,"Good!","Poor!")
print(paste0("Communication skill level: ", communication_skill_level, " Your sentence has ", number_of_words, " words, ", number_of_characters, " characters and your sentence's average word length is ", average_word_length))
}
text_analysis_game()
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
total<-100
new_total<-function(x){
total<<-total+x
return(total)}
new_total(5)
new_total(10)
new_total(30)
# Enter code here
total<-100
new_total<<-function(x){
total<-total+x
return(total)}
new_total(5)
new_total(10)
new_total(30)
# Enter code here
total<-100
new_total<-function(x){
total<<-total+x
}
new_total(5)
new_total(10)
new_total(30)
# Enter code here
outer_function<-function(x){
x<-5
inner_function<-function(){
print(x)}
return(inner_function())}
outer_function(x)
# Enter code here
outer_function<-function(x){
x<-5
inner_function<-function(){
print(x)}
return(inner_function())}
outer_function(x)
install.packages('tidyverse')
playlist_data
knitr::opts_chunk$set(echo = TRUE)
# Type the name of the variable, to see what it contains
playlist_data
# Import the "playlist_data.csv" dataset into R
read_csv("playlist_data.csv")
# Load the necessary package to work with CSV files in R.
library('tidyverse')
# Import the "playlist_data.csv" dataset into R
read_csv("playlist_data.csv")
# Number of DJs
length(playlist_data)
# Type the name of the variable, to see what it contains
playlist_data
# Assign the variable to a dataset
playlist_data <- read_csv("playlist_data.csv")
# Assign the variable to a dataset
playlist_data <- read_csv("playlist_data.csv")
# Number of DJs
length(playlist_data)
playlist_data
# Number of DJs
length(DJ_Name)
# Number of DJs
length(playlist_data$DJ_Name)
install.packages('ggplot2')
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
# complete the code to generate the plot
library('ggplot2')
ggplot('playlist_data')+aes(x=Age,y=Rating)+geom_point(shape=5)+labs(x="age",y="rate",title="hello",caption="hello to you")
# complete the code to generate the plot
library('ggplot')
# complete the code to generate the plot
library('ggplot2')
ggplot('playlist_data')+aes(x=Age,y=Rating)+geom_point(shape=5)+labs(x="age",y="rate",title="hello",caption="hello to you")
# complete the code to generate the plot
library('ggplot2')
ggplot('playlist_data')+aes(x=Age,y=Rating)+geom_point(shape=5)+labs(x="age",y="rate",title="hello",caption="hello to you")
# complete the code to generate the plot
library('ggplot2')
ggplot(playlist_data)+aes(x=Age,y=Rating)+geom_point(shape=5)+labs(x="age",y="rate",title="hello",caption="hello to you")
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
ages<-c(25,30,22,28,33)
ages
# Enter code here
student_info<-list(names=c("Alice", "Bob","Catherine"),score=c(85, 92, 78),passed=c(TRUE, TRUE, FALSE))
# Enter code here
student_info<-list(names=c("Alice", "Bob","Catherine"),score=c(85, 92, 78),passed=c(TRUE, TRUE, FALSE))
student_info
# Enter code here
data<-c(10,15.5,"20")
typeof(data)
# Enter code here
prices<-c(20.5,15,"25")
prices<-as.numeric(prices)
prices
# Enter code here
numeric<-c(5, 10, 15)
character<-c("apple", "banana", "cherry")
combined<-numeric+character
# Enter code here
numeric<-c(5, 10, 15)
character<-c("apple", "banana", "cherry")
combined<-c(numeric,character)
# Enter code here
numeric<-c(5, 10, 15)
character<-c("apple", "banana", "cherry")
combined<-c(numeric,character)
combined
# Enter code here
numbers<-7,12,5,"15,7"
# Enter code here
numbers<-7,12,5,"15.7"
# Enter code here
numbers<-c(7,12,5,"15.7")
numbers<-as.numeric(numbers)
sum(numbers)
# Enter code here
numbers<-c(7,12.5,"15.7")
numbers<-as.numeric(numbers)
sum(numbers)
# Enter code here
grades<-c(85,90.5,"75,2")
grades<-as.numeric(grades)
mean(grades)
# Enter code here
grades<-c(85,90.5,"75.2")
grades<-as.numeric(grades)
mean(grades)
# Enter code here
mixed_data<-list(numeric=c(10,20,30),character=c("red", "green", "blue"),logical=c(TRUE, FALSE, TRUE))
mean(mixed_data$numeric)
# Enter code here
student_info$score[names[2]]
# Enter code here
student_info$score[names(2)]
# Enter code here
student_info$score[student_info$names[2]]
student_info$names[2]
# Enter code here
student_info$score[student_info$names=="Bob"]
# Enter code here
x<-c(1,2,3,4,5)
x[length(x)]
# Enter code here
words <- c("apple", "banana", "cherry", "apple")
words[word=="apple"]
# Enter code here
words <- c("apple", "banana", "cherry", "apple")
word=="apple"
# Enter code here
words <- c("apple", "banana", "cherry", "apple")
words=="apple"
# Enter code here
words <- c("apple", "banana", "cherry", "apple")
words[words=="apple"]
# Enter code here
words <- c("apple", "banana", "cherry", "apple")
which(words=="apple")
# Enter code here
ages<-c(1,2,3,4,5,30,60,70)
ages[ages>30]
# Enter code here
x<-1:20
x[seq(from=1,to=20,by=3)]
# Enter code here
vector<-1:10
vector[4:8]
# Enter code here
data <- c(10, NA, 15, 20)
is.na(data[2])
# Enter code here
temperatures<-c(30,40,50,60,70,80,90,100,110,120)
hot_days<-temperatures>90
sum(hot_days)
# Enter code here
temperatures<-c(30,40,50,60,70,80,90,100,110,120)
hot_days<-temperatures>90
sum(hot_days)
hot_days
# Enter code here
temperatures<-c(30,40,50,60,70,80,90,100,110,120)
hot_days<-temperatures>90
length(hot_days)
# Enter code here
temperatures<-c(30,40,50,60,70,80,90,100,110,120)
hot_days<-temperatures>90
length(hot_days==TRUE)
# Enter code here
temperatures<-c(30,40,50,60,70,80,90,100,110,120)
hot_days<-temperatures>90
length(hot_days[hot_days==TRUE])
# Enter code here
temperatures<-c(30,40,50,60,70,80,90,100,110,120)
hot_days<-temperatures>90
length(hot_days[hot_days==TRUE])
sum(hot_days)
# Enter code here
fruits<-c("apple","banana","blueberry")
long_names<-fruits[nchar(fruits)>6]
long_names
# Enter code here
x<-c(5,10,15,16)
divisible_by_5<-x[x%%5]
# Enter code here
x<-c(5,10,15,16)
divisible_by_5<-x[x%%5]
divisible_by_5
# Enter code here
x<-c(5,10,15,16)
divisible_by_5<-x%%5==0
divisible_by_5
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
numbers<-c(1,2,3,4,5)
divisible_by_5<-numbers%%5==0
divisible_by_5
# Enter code here
x<-c(5,10,15,16)
divisible_by_5<-x%%5==0
x[divisible_by_5==TRUE]
DIVIDE<-x[x%%5]
DIVIDE
# Enter code here
vector1<-c(1,2,3,4,5)
vector2<-c(4,56,7,8,9)
x<-vector2>vector1
x
x<-c(5,10,15,17)
divisible_by_5<-x[x%%5]
divisible_by_5
install.packages('tidyverse')
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
library('tidyverse')
comm_data<-read_csv(CommQuest2023_Larger.csv)
setwd("~/GitHub/NM2207/Week-4")
# Enter code here
library('tidyverse')
comm_data<-read_csv(CommQuest2023_Larger.csv)
# Enter code here
library('tidyverse')
comm_data<-read_csv('CommQuest2023_Larger.csv')
# Enter code here
comm_data %>%
select(channel,date,message)
comm_data
# Enter code here
comm_data %>%
filter(date=="2023-08-02",channel=="Twitter")
# Enter code here
comm_data %>%
arrange(desc(date))
# Enter code here
comm_data %>%
distinct(senders)
# Enter code here
comm_data %>%
distinct(sender)
# Enter code here
comm_data %>%
group_by(sender) %>%
count(messages)
# Enter code here
comm_data %>%
group_by(sender) %>%
count(message)
# Enter code here
comm_data %>%
group_by(sender) %>%
count(sender)
# Enter code here
comm_data %>%
group_by(channel)%>%
count(channel)
# Enter code here
comm_data %>%
select(sender)%>%
filter(sentiment>0)%>%
arrange(desc(sentiment))%>%
slice(1:3)
# Enter code here
comm_data %>%
select(sender,sentiment)%>%
filter(sentiment>0)%>%
arrange(desc(sentiment))%>%
slice(1:3)
# Enter code here
comm_data %>%
select(distinct(sender),sentiment)%>%
filter(sentiment>0)%>%
arrange(desc(sentiment))%>%
slice(1:3)
# Enter code here
comm_data %>%
distinct(sender,sentiment)%>%
filter(sentiment>0)%>%
arrange(desc(sentiment))%>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender)%>%
filter(sentiment>0)%>%
arrange(desc(sentiment))%>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender)%>%
filter(sentiment>0)%>%
arrange(desc(sentiment))%>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender)%>%
arrange(desc(sentiment))%>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
summarise(average_sentiment=mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(date)%>%
summarise(average=mean(sentiment))%>%
arrange(date)
# Enter code here
comm_data %>%
select(messaage)%>%
filter(sentiment<0)
# Enter code here
comm_data %>%
select(message)%>%
filter(sentiment<0)
# Enter code here
comm_data %>%
select(messages)%>%
filter(sentiment<0)
# Enter code here
comm_data %>%
select(message)%>%
filter(sentiment<0)
# Enter code here
comm_data %>%
select(message,sentiment)%>%
filter(sentiment<0)
# Enter code here
comm_data %>%
mutate(sentimentscore=ifelse(sentiment>0,"Positive",ifelse(sentiment==0,"Neutral","Negative")))
# Enter code here
comm_data %>%
mutate(product=sentiment*nchar(message))%>%
arrange(desc(product))
# Enter code here
comm_data %>%
group_by(date)%>%
summarise(highest=nchar(message))
# Enter code here
comm_data %>%
group_by(date)%>%
summarise(highest=sum(nchar(message))
# Enter code here
comm_data %>%
group_by(date)%>%
summarise(highest=sum(nchar(message)))
