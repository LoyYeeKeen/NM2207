install_packages('shiny')library(shiny)
install.packages('shiny')
library(shiny)
library(png)
install.packages('png')
library(png)
library(shiny)
library(png)
# Define the URL of the image to be colored
image_url <- "https://lumiere-a.akamaihd.net/v1/images/c94eed56a5e84479a2939c9172434567c0147d4f.jpeg?region=0%2C0%2C600%2C600"
# Load the original image
original_image <- readPNG(image_url)
library(shiny)
library(png)
# Define the URL of the image to be colored
image_url <- ""https://jeroen.github.io/images/frink.png""
library(shiny)
library(png)
# Define the URL of the image to be colored
image_url <- "https://jeroen.github.io/images/frink.png"
# Load the original image
original_image <- readPNG(image_url)
image_url <- "https://jeroen.github.io/images/frink.png"
image_url
image_read("https://jeroen.github.io/images/frink.png") %>%
image_rotate(270) %>%
image_background("blue", flatten = TRUE) %>%
image_border("red", "10x10") %>%
image_annotate("The same thing with pipes", color = "white", size = 30)
image_read("https://jeroen.github.io/images/frink.png")
install.packages("png", repos = "https://cran.r-project.org")
install.packages("png", repos = "https://cran.r-project.org")
library(shiny)
library(png)
# Define the URL of the image to be colored
image_url <- "https://jeroen.github.io/images/frink.png"
# Load the original image
original_image <- readPNG(image_url)
library(shiny)
library(png)
# Define the URL of the image to be colored
image_url <- https://jeroen.github.io/images/frink.png
?readPNG
library(shiny)
library(png)
# Load the original image
original_image <- readPNG("https://jeroen.github.io/images/frink.png")
library(shiny)
library(png)
# Define the URL of the image to be colored
image_url <- "frink.png"
# Load the original image
original_image <- readPNG(image_url)
# Create a Shiny app
ui <- fluidPage(
titlePanel("Simple Coloring Game"),
sidebarLayout(
sidebarPanel(
h4("Color Palette"),
# Color selection (just one color)
selectInput("color", "Select a color:",
choices = c("Red" = "red", "Green" = "green", "Blue" = "blue"))
),
mainPanel(
h4("Original Image"),
# Display the original image
imageOutput("original"),
h4("Colored Image"),
# Display the colored image
imageOutput("colored")
)
)
)
server <- function(input, output) {
# Initialize the colored image as grayscale
colored_image <- original_image
# Render the original image
output$original <- renderImage({
list(src = image_url,
contentType = "image/png")
})
# Render the colored image
output$colored <- renderImage({
# Apply the selected color to the colored image
colored_image[,,1] <- ifelse(colored_image[,,1] == 1, 0, input$color == "red")
colored_image[,,2] <- ifelse(colored_image[,,2] == 1, 0, input$color == "green")
colored_image[,,3] <- ifelse(colored_image[,,3] == 1, 0, input$color == "blue")
# Render the colored image
list(src = as.raster(colored_image),
contentType = "image/png")
})
}
shinyApp(ui, server)
library(shiny)
library(png)
# Define the URL of the image to be colored
image_url <- "frink.png"
# Function to load the original image
loadOriginalImage <- function() {
original_image <- readPNG(image_url)
return(original_image)
}
# Create a Shiny app
ui <- fluidPage(
titlePanel("Simple Coloring Game"),
sidebarLayout(
sidebarPanel(
h4("Color Palette"),
# Color selection (just one color)
selectInput("color", "Select a color:",
choices = c("Red" = "red", "Green" = "green", "Blue" = "blue"))
),
mainPanel(
h4("Original Image"),
# Display the original image
imageOutput("original"),
h4("Colored Image"),
# Display the colored image
imageOutput("colored")
)
)
)
server <- function(input, output, session) {
# Initialize the colored image as grayscale
colored_image <- loadOriginalImage()
# Render the original image
output$original <- renderImage({
list(src = image_url,
contentType = "image/png")
})
# Render the colored image
observeEvent(input$color, {
# Apply the selected color to the colored image
colored_image <- loadOriginalImage()
colored_image[,,1] <- ifelse(colored_image[,,1] == 1, 0, input$color == "red")
colored_image[,,2] <- ifelse(colored_image[,,2] == 1, 0, input$color == "green")
colored_image[,,3] <- ifelse(colored_image[,,3] == 1, 0, input$color == "blue")
# Render the colored image
output$colored <- renderImage({
list(src = as.raster(colored_image),
contentType = "image/png")
})
})
}
shinyApp(ui, server)
